// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgRoleSelect.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MsgRoleSelect.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

void protobuf_ShutdownFile_MsgRoleSelect_2eproto() {
  delete CRoleSummary::default_instance_;
  delete CMsgRoleSelect::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_MsgRoleSelect_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_MsgRoleSelect_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  CRoleSummary::default_instance_ = new CRoleSummary();
  CMsgRoleSelect::default_instance_ = new CMsgRoleSelect();
  CRoleSummary::default_instance_->InitAsDefaultInstance();
  CMsgRoleSelect::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MsgRoleSelect_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_MsgRoleSelect_2eproto_once_);
void protobuf_AddDesc_MsgRoleSelect_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_MsgRoleSelect_2eproto_once_,
                 &protobuf_AddDesc_MsgRoleSelect_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MsgRoleSelect_2eproto {
  StaticDescriptorInitializer_MsgRoleSelect_2eproto() {
    protobuf_AddDesc_MsgRoleSelect_2eproto();
  }
} static_descriptor_initializer_MsgRoleSelect_2eproto_;
#endif

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int CRoleSummary::kIdRoleFieldNumber;
const int CRoleSummary::kSzNameFieldNumber;
const int CRoleSummary::kIdRoleTypeFieldNumber;
const int CRoleSummary::kNLevelFieldNumber;
#endif  // !_MSC_VER

CRoleSummary::CRoleSummary()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CRoleSummary)
}

void CRoleSummary::InitAsDefaultInstance() {
}

CRoleSummary::CRoleSummary(const CRoleSummary& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CRoleSummary)
}

void CRoleSummary::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  idrole_ = GOOGLE_ULONGLONG(0);
  szname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idroletype_ = 0u;
  nlevel_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CRoleSummary::~CRoleSummary() {
  // @@protoc_insertion_point(destructor:CRoleSummary)
  SharedDtor();
}

void CRoleSummary::SharedDtor() {
  szname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void CRoleSummary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CRoleSummary& CRoleSummary::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_MsgRoleSelect_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_MsgRoleSelect_2eproto();
#endif
  return *default_instance_;
}

CRoleSummary* CRoleSummary::default_instance_ = NULL;

CRoleSummary* CRoleSummary::New(::google::protobuf::Arena* arena) const {
  CRoleSummary* n = new CRoleSummary;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CRoleSummary::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CRoleSummary*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(idroletype_, nlevel_);
    idrole_ = GOOGLE_ULONGLONG(0);
    if (has_szname()) {
      szname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool CRoleSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:CRoleSummary)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 idRole = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &idrole_)));
          set_has_idrole();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_szName;
        break;
      }

      // required string szName = 2;
      case 2: {
        if (tag == 18) {
         parse_szName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szname()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_idRoleType;
        break;
      }

      // optional uint32 idRoleType = 3;
      case 3: {
        if (tag == 24) {
         parse_idRoleType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idroletype_)));
          set_has_idroletype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_nLevel;
        break;
      }

      // optional uint32 nLevel = 4;
      case 4: {
        if (tag == 32) {
         parse_nLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nlevel_)));
          set_has_nlevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CRoleSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CRoleSummary)
  return false;
#undef DO_
}

void CRoleSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CRoleSummary)
  // required uint64 idRole = 1;
  if (has_idrole()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->idrole(), output);
  }

  // required string szName = 2;
  if (has_szname()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->szname(), output);
  }

  // optional uint32 idRoleType = 3;
  if (has_idroletype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->idroletype(), output);
  }

  // optional uint32 nLevel = 4;
  if (has_nlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->nlevel(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:CRoleSummary)
}

int CRoleSummary::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_idrole()) {
    // required uint64 idRole = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->idrole());
  }

  if (has_szname()) {
    // required string szName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szname());
  }

  return total_size;
}
int CRoleSummary::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 idRole = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->idrole());

    // required string szName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->szname());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 12u) {
    // optional uint32 idRoleType = 3;
    if (has_idroletype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->idroletype());
    }

    // optional uint32 nLevel = 4;
    if (has_nlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->nlevel());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CRoleSummary::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CRoleSummary*>(&from));
}

void CRoleSummary::MergeFrom(const CRoleSummary& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_idrole()) {
      set_idrole(from.idrole());
    }
    if (from.has_szname()) {
      set_has_szname();
      szname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szname_);
    }
    if (from.has_idroletype()) {
      set_idroletype(from.idroletype());
    }
    if (from.has_nlevel()) {
      set_nlevel(from.nlevel());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void CRoleSummary::CopyFrom(const CRoleSummary& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CRoleSummary::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CRoleSummary::Swap(CRoleSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CRoleSummary::InternalSwap(CRoleSummary* other) {
  std::swap(idrole_, other->idrole_);
  szname_.Swap(&other->szname_);
  std::swap(idroletype_, other->idroletype_);
  std::swap(nlevel_, other->nlevel_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.swap(other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CRoleSummary::GetTypeName() const {
  return "CRoleSummary";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CRoleSummary

// required uint64 idRole = 1;
bool CRoleSummary::has_idrole() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CRoleSummary::set_has_idrole() {
  _has_bits_[0] |= 0x00000001u;
}
void CRoleSummary::clear_has_idrole() {
  _has_bits_[0] &= ~0x00000001u;
}
void CRoleSummary::clear_idrole() {
  idrole_ = GOOGLE_ULONGLONG(0);
  clear_has_idrole();
}
 ::google::protobuf::uint64 CRoleSummary::idrole() const {
  // @@protoc_insertion_point(field_get:CRoleSummary.idRole)
  return idrole_;
}
 void CRoleSummary::set_idrole(::google::protobuf::uint64 value) {
  set_has_idrole();
  idrole_ = value;
  // @@protoc_insertion_point(field_set:CRoleSummary.idRole)
}

// required string szName = 2;
bool CRoleSummary::has_szname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CRoleSummary::set_has_szname() {
  _has_bits_[0] |= 0x00000002u;
}
void CRoleSummary::clear_has_szname() {
  _has_bits_[0] &= ~0x00000002u;
}
void CRoleSummary::clear_szname() {
  szname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_szname();
}
 const ::std::string& CRoleSummary::szname() const {
  // @@protoc_insertion_point(field_get:CRoleSummary.szName)
  return szname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CRoleSummary::set_szname(const ::std::string& value) {
  set_has_szname();
  szname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CRoleSummary.szName)
}
 void CRoleSummary::set_szname(const char* value) {
  set_has_szname();
  szname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CRoleSummary.szName)
}
 void CRoleSummary::set_szname(const char* value, size_t size) {
  set_has_szname();
  szname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CRoleSummary.szName)
}
 ::std::string* CRoleSummary::mutable_szname() {
  set_has_szname();
  // @@protoc_insertion_point(field_mutable:CRoleSummary.szName)
  return szname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CRoleSummary::release_szname() {
  clear_has_szname();
  return szname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CRoleSummary::set_allocated_szname(::std::string* szname) {
  if (szname != NULL) {
    set_has_szname();
  } else {
    clear_has_szname();
  }
  szname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szname);
  // @@protoc_insertion_point(field_set_allocated:CRoleSummary.szName)
}

// optional uint32 idRoleType = 3;
bool CRoleSummary::has_idroletype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CRoleSummary::set_has_idroletype() {
  _has_bits_[0] |= 0x00000004u;
}
void CRoleSummary::clear_has_idroletype() {
  _has_bits_[0] &= ~0x00000004u;
}
void CRoleSummary::clear_idroletype() {
  idroletype_ = 0u;
  clear_has_idroletype();
}
 ::google::protobuf::uint32 CRoleSummary::idroletype() const {
  // @@protoc_insertion_point(field_get:CRoleSummary.idRoleType)
  return idroletype_;
}
 void CRoleSummary::set_idroletype(::google::protobuf::uint32 value) {
  set_has_idroletype();
  idroletype_ = value;
  // @@protoc_insertion_point(field_set:CRoleSummary.idRoleType)
}

// optional uint32 nLevel = 4;
bool CRoleSummary::has_nlevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CRoleSummary::set_has_nlevel() {
  _has_bits_[0] |= 0x00000008u;
}
void CRoleSummary::clear_has_nlevel() {
  _has_bits_[0] &= ~0x00000008u;
}
void CRoleSummary::clear_nlevel() {
  nlevel_ = 0u;
  clear_has_nlevel();
}
 ::google::protobuf::uint32 CRoleSummary::nlevel() const {
  // @@protoc_insertion_point(field_get:CRoleSummary.nLevel)
  return nlevel_;
}
 void CRoleSummary::set_nlevel(::google::protobuf::uint32 value) {
  set_has_nlevel();
  nlevel_ = value;
  // @@protoc_insertion_point(field_set:CRoleSummary.nLevel)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CMsgRoleSelect::kIdRoleSelectedFieldNumber;
const int CMsgRoleSelect::kRolesFieldNumber;
#endif  // !_MSC_VER

CMsgRoleSelect::CMsgRoleSelect()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRoleSelect)
}

void CMsgRoleSelect::InitAsDefaultInstance() {
}

CMsgRoleSelect::CMsgRoleSelect(const CMsgRoleSelect& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgRoleSelect)
}

void CMsgRoleSelect::SharedCtor() {
  _cached_size_ = 0;
  idroleselected_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgRoleSelect::~CMsgRoleSelect() {
  // @@protoc_insertion_point(destructor:CMsgRoleSelect)
  SharedDtor();
}

void CMsgRoleSelect::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void CMsgRoleSelect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CMsgRoleSelect& CMsgRoleSelect::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_MsgRoleSelect_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_MsgRoleSelect_2eproto();
#endif
  return *default_instance_;
}

CMsgRoleSelect* CMsgRoleSelect::default_instance_ = NULL;

CMsgRoleSelect* CMsgRoleSelect::New(::google::protobuf::Arena* arena) const {
  CMsgRoleSelect* n = new CMsgRoleSelect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgRoleSelect::Clear() {
  idroleselected_ = GOOGLE_ULONGLONG(0);
  roles_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool CMsgRoleSelect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:CMsgRoleSelect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 idRoleSelected = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &idroleselected_)));
          set_has_idroleselected();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_roles;
        break;
      }

      // repeated .CRoleSummary roles = 2;
      case 2: {
        if (tag == 18) {
         parse_roles:
          DO_(input->IncrementRecursionDepth());
         parse_loop_roles:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_roles()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_roles;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRoleSelect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRoleSelect)
  return false;
#undef DO_
}

void CMsgRoleSelect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRoleSelect)
  // optional uint64 idRoleSelected = 1;
  if (has_idroleselected()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->idroleselected(), output);
  }

  // repeated .CRoleSummary roles = 2;
  for (unsigned int i = 0, n = this->roles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->roles(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:CMsgRoleSelect)
}

int CMsgRoleSelect::ByteSize() const {
  int total_size = 0;

  // optional uint64 idRoleSelected = 1;
  if (has_idroleselected()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->idroleselected());
  }

  // repeated .CRoleSummary roles = 2;
  total_size += 1 * this->roles_size();
  for (int i = 0; i < this->roles_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->roles(i));
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRoleSelect::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMsgRoleSelect*>(&from));
}

void CMsgRoleSelect::MergeFrom(const CMsgRoleSelect& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  roles_.MergeFrom(from.roles_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_idroleselected()) {
      set_idroleselected(from.idroleselected());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void CMsgRoleSelect::CopyFrom(const CMsgRoleSelect& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRoleSelect::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->roles())) return false;
  return true;
}

void CMsgRoleSelect::Swap(CMsgRoleSelect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRoleSelect::InternalSwap(CMsgRoleSelect* other) {
  std::swap(idroleselected_, other->idroleselected_);
  roles_.UnsafeArenaSwap(&other->roles_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.swap(other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CMsgRoleSelect::GetTypeName() const {
  return "CMsgRoleSelect";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgRoleSelect

// optional uint64 idRoleSelected = 1;
bool CMsgRoleSelect::has_idroleselected() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgRoleSelect::set_has_idroleselected() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgRoleSelect::clear_has_idroleselected() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgRoleSelect::clear_idroleselected() {
  idroleselected_ = GOOGLE_ULONGLONG(0);
  clear_has_idroleselected();
}
 ::google::protobuf::uint64 CMsgRoleSelect::idroleselected() const {
  // @@protoc_insertion_point(field_get:CMsgRoleSelect.idRoleSelected)
  return idroleselected_;
}
 void CMsgRoleSelect::set_idroleselected(::google::protobuf::uint64 value) {
  set_has_idroleselected();
  idroleselected_ = value;
  // @@protoc_insertion_point(field_set:CMsgRoleSelect.idRoleSelected)
}

// repeated .CRoleSummary roles = 2;
int CMsgRoleSelect::roles_size() const {
  return roles_.size();
}
void CMsgRoleSelect::clear_roles() {
  roles_.Clear();
}
 const ::CRoleSummary& CMsgRoleSelect::roles(int index) const {
  // @@protoc_insertion_point(field_get:CMsgRoleSelect.roles)
  return roles_.Get(index);
}
 ::CRoleSummary* CMsgRoleSelect::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgRoleSelect.roles)
  return roles_.Mutable(index);
}
 ::CRoleSummary* CMsgRoleSelect::add_roles() {
  // @@protoc_insertion_point(field_add:CMsgRoleSelect.roles)
  return roles_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::CRoleSummary >&
CMsgRoleSelect::roles() const {
  // @@protoc_insertion_point(field_list:CMsgRoleSelect.roles)
  return roles_;
}
 ::google::protobuf::RepeatedPtrField< ::CRoleSummary >*
CMsgRoleSelect::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:CMsgRoleSelect.roles)
  return &roles_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

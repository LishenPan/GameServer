// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgMove.proto

#ifndef PROTOBUF_MsgMove_2eproto__INCLUDED
#define PROTOBUF_MsgMove_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_MsgMove_2eproto();
void protobuf_AssignDesc_MsgMove_2eproto();
void protobuf_ShutdownFile_MsgMove_2eproto();

class CMsgMove;

enum MSG_MOVE_ACTION {
  MOVEACT_NONE = 0,
  MOVEACT_WALK = 1,
  MOVEACT_JUMP = 2,
  MOVEACT_TELEPORT = 3
};
bool MSG_MOVE_ACTION_IsValid(int value);
const MSG_MOVE_ACTION MSG_MOVE_ACTION_MIN = MOVEACT_NONE;
const MSG_MOVE_ACTION MSG_MOVE_ACTION_MAX = MOVEACT_TELEPORT;
const int MSG_MOVE_ACTION_ARRAYSIZE = MSG_MOVE_ACTION_MAX + 1;

// ===================================================================

class CMsgMove : public ::google::protobuf::MessageLite {
 public:
  CMsgMove();
  virtual ~CMsgMove();

  CMsgMove(const CMsgMove& from);

  inline CMsgMove& operator=(const CMsgMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CMsgMove& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CMsgMove* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CMsgMove* other);

  // implements Message ----------------------------------------------

  inline CMsgMove* New() const { return New(NULL); }

  CMsgMove* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CMsgMove& from);
  void MergeFrom(const CMsgMove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMsgMove* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 nAction = 1;
  bool has_naction() const;
  void clear_naction();
  static const int kNActionFieldNumber = 1;
  ::google::protobuf::int32 naction() const;
  void set_naction(::google::protobuf::int32 value);

  // optional uint64 idRole = 2;
  bool has_idrole() const;
  void clear_idrole();
  static const int kIdRoleFieldNumber = 2;
  ::google::protobuf::uint64 idrole() const;
  void set_idrole(::google::protobuf::uint64 value);

  // optional float fStartX = 3;
  bool has_fstartx() const;
  void clear_fstartx();
  static const int kFStartXFieldNumber = 3;
  float fstartx() const;
  void set_fstartx(float value);

  // optional float fStartY = 4;
  bool has_fstarty() const;
  void clear_fstarty();
  static const int kFStartYFieldNumber = 4;
  float fstarty() const;
  void set_fstarty(float value);

  // optional float fStartZ = 5;
  bool has_fstartz() const;
  void clear_fstartz();
  static const int kFStartZFieldNumber = 5;
  float fstartz() const;
  void set_fstartz(float value);

  // optional float fEndX = 6;
  bool has_fendx() const;
  void clear_fendx();
  static const int kFEndXFieldNumber = 6;
  float fendx() const;
  void set_fendx(float value);

  // optional float fEndY = 7;
  bool has_fendy() const;
  void clear_fendy();
  static const int kFEndYFieldNumber = 7;
  float fendy() const;
  void set_fendy(float value);

  // optional float fEndz = 8;
  bool has_fendz() const;
  void clear_fendz();
  static const int kFEndzFieldNumber = 8;
  float fendz() const;
  void set_fendz(float value);

  // optional int64 tStartTime = 9;
  bool has_tstarttime() const;
  void clear_tstarttime();
  static const int kTStartTimeFieldNumber = 9;
  ::google::protobuf::int64 tstarttime() const;
  void set_tstarttime(::google::protobuf::int64 value);

  // optional int64 tEndTime = 10;
  bool has_tendtime() const;
  void clear_tendtime();
  static const int kTEndTimeFieldNumber = 10;
  ::google::protobuf::int64 tendtime() const;
  void set_tendtime(::google::protobuf::int64 value);

  // optional float fVelecity = 11;
  bool has_fvelecity() const;
  void clear_fvelecity();
  static const int kFVelecityFieldNumber = 11;
  float fvelecity() const;
  void set_fvelecity(float value);

  // @@protoc_insertion_point(class_scope:CMsgMove)
 private:
  inline void set_has_naction();
  inline void clear_has_naction();
  inline void set_has_idrole();
  inline void clear_has_idrole();
  inline void set_has_fstartx();
  inline void clear_has_fstartx();
  inline void set_has_fstarty();
  inline void clear_has_fstarty();
  inline void set_has_fstartz();
  inline void clear_has_fstartz();
  inline void set_has_fendx();
  inline void clear_has_fendx();
  inline void set_has_fendy();
  inline void clear_has_fendy();
  inline void set_has_fendz();
  inline void clear_has_fendz();
  inline void set_has_tstarttime();
  inline void clear_has_tstarttime();
  inline void set_has_tendtime();
  inline void clear_has_tendtime();
  inline void set_has_fvelecity();
  inline void clear_has_fvelecity();

  ::std::string _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 idrole_;
  ::google::protobuf::int32 naction_;
  float fstartx_;
  float fstarty_;
  float fstartz_;
  float fendx_;
  float fendy_;
  ::google::protobuf::int64 tstarttime_;
  float fendz_;
  float fvelecity_;
  ::google::protobuf::int64 tendtime_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MsgMove_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MsgMove_2eproto();
  #endif
  friend void protobuf_AssignDesc_MsgMove_2eproto();
  friend void protobuf_ShutdownFile_MsgMove_2eproto();

  void InitAsDefaultInstance();
  static CMsgMove* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgMove

// required int32 nAction = 1;
inline bool CMsgMove::has_naction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMove::set_has_naction() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMove::clear_has_naction() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMove::clear_naction() {
  naction_ = 0;
  clear_has_naction();
}
inline ::google::protobuf::int32 CMsgMove::naction() const {
  // @@protoc_insertion_point(field_get:CMsgMove.nAction)
  return naction_;
}
inline void CMsgMove::set_naction(::google::protobuf::int32 value) {
  set_has_naction();
  naction_ = value;
  // @@protoc_insertion_point(field_set:CMsgMove.nAction)
}

// optional uint64 idRole = 2;
inline bool CMsgMove::has_idrole() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMove::set_has_idrole() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMove::clear_has_idrole() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMove::clear_idrole() {
  idrole_ = GOOGLE_ULONGLONG(0);
  clear_has_idrole();
}
inline ::google::protobuf::uint64 CMsgMove::idrole() const {
  // @@protoc_insertion_point(field_get:CMsgMove.idRole)
  return idrole_;
}
inline void CMsgMove::set_idrole(::google::protobuf::uint64 value) {
  set_has_idrole();
  idrole_ = value;
  // @@protoc_insertion_point(field_set:CMsgMove.idRole)
}

// optional float fStartX = 3;
inline bool CMsgMove::has_fstartx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMove::set_has_fstartx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMove::clear_has_fstartx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMove::clear_fstartx() {
  fstartx_ = 0;
  clear_has_fstartx();
}
inline float CMsgMove::fstartx() const {
  // @@protoc_insertion_point(field_get:CMsgMove.fStartX)
  return fstartx_;
}
inline void CMsgMove::set_fstartx(float value) {
  set_has_fstartx();
  fstartx_ = value;
  // @@protoc_insertion_point(field_set:CMsgMove.fStartX)
}

// optional float fStartY = 4;
inline bool CMsgMove::has_fstarty() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgMove::set_has_fstarty() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgMove::clear_has_fstarty() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgMove::clear_fstarty() {
  fstarty_ = 0;
  clear_has_fstarty();
}
inline float CMsgMove::fstarty() const {
  // @@protoc_insertion_point(field_get:CMsgMove.fStartY)
  return fstarty_;
}
inline void CMsgMove::set_fstarty(float value) {
  set_has_fstarty();
  fstarty_ = value;
  // @@protoc_insertion_point(field_set:CMsgMove.fStartY)
}

// optional float fStartZ = 5;
inline bool CMsgMove::has_fstartz() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgMove::set_has_fstartz() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgMove::clear_has_fstartz() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgMove::clear_fstartz() {
  fstartz_ = 0;
  clear_has_fstartz();
}
inline float CMsgMove::fstartz() const {
  // @@protoc_insertion_point(field_get:CMsgMove.fStartZ)
  return fstartz_;
}
inline void CMsgMove::set_fstartz(float value) {
  set_has_fstartz();
  fstartz_ = value;
  // @@protoc_insertion_point(field_set:CMsgMove.fStartZ)
}

// optional float fEndX = 6;
inline bool CMsgMove::has_fendx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgMove::set_has_fendx() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgMove::clear_has_fendx() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgMove::clear_fendx() {
  fendx_ = 0;
  clear_has_fendx();
}
inline float CMsgMove::fendx() const {
  // @@protoc_insertion_point(field_get:CMsgMove.fEndX)
  return fendx_;
}
inline void CMsgMove::set_fendx(float value) {
  set_has_fendx();
  fendx_ = value;
  // @@protoc_insertion_point(field_set:CMsgMove.fEndX)
}

// optional float fEndY = 7;
inline bool CMsgMove::has_fendy() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgMove::set_has_fendy() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgMove::clear_has_fendy() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgMove::clear_fendy() {
  fendy_ = 0;
  clear_has_fendy();
}
inline float CMsgMove::fendy() const {
  // @@protoc_insertion_point(field_get:CMsgMove.fEndY)
  return fendy_;
}
inline void CMsgMove::set_fendy(float value) {
  set_has_fendy();
  fendy_ = value;
  // @@protoc_insertion_point(field_set:CMsgMove.fEndY)
}

// optional float fEndz = 8;
inline bool CMsgMove::has_fendz() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgMove::set_has_fendz() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgMove::clear_has_fendz() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgMove::clear_fendz() {
  fendz_ = 0;
  clear_has_fendz();
}
inline float CMsgMove::fendz() const {
  // @@protoc_insertion_point(field_get:CMsgMove.fEndz)
  return fendz_;
}
inline void CMsgMove::set_fendz(float value) {
  set_has_fendz();
  fendz_ = value;
  // @@protoc_insertion_point(field_set:CMsgMove.fEndz)
}

// optional int64 tStartTime = 9;
inline bool CMsgMove::has_tstarttime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgMove::set_has_tstarttime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgMove::clear_has_tstarttime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgMove::clear_tstarttime() {
  tstarttime_ = GOOGLE_LONGLONG(0);
  clear_has_tstarttime();
}
inline ::google::protobuf::int64 CMsgMove::tstarttime() const {
  // @@protoc_insertion_point(field_get:CMsgMove.tStartTime)
  return tstarttime_;
}
inline void CMsgMove::set_tstarttime(::google::protobuf::int64 value) {
  set_has_tstarttime();
  tstarttime_ = value;
  // @@protoc_insertion_point(field_set:CMsgMove.tStartTime)
}

// optional int64 tEndTime = 10;
inline bool CMsgMove::has_tendtime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgMove::set_has_tendtime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgMove::clear_has_tendtime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgMove::clear_tendtime() {
  tendtime_ = GOOGLE_LONGLONG(0);
  clear_has_tendtime();
}
inline ::google::protobuf::int64 CMsgMove::tendtime() const {
  // @@protoc_insertion_point(field_get:CMsgMove.tEndTime)
  return tendtime_;
}
inline void CMsgMove::set_tendtime(::google::protobuf::int64 value) {
  set_has_tendtime();
  tendtime_ = value;
  // @@protoc_insertion_point(field_set:CMsgMove.tEndTime)
}

// optional float fVelecity = 11;
inline bool CMsgMove::has_fvelecity() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgMove::set_has_fvelecity() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgMove::clear_has_fvelecity() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgMove::clear_fvelecity() {
  fvelecity_ = 0;
  clear_has_fvelecity();
}
inline float CMsgMove::fvelecity() const {
  // @@protoc_insertion_point(field_get:CMsgMove.fVelecity)
  return fvelecity_;
}
inline void CMsgMove::set_fvelecity(float value) {
  set_has_fvelecity();
  fvelecity_ = value;
  // @@protoc_insertion_point(field_set:CMsgMove.fVelecity)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MSG_MOVE_ACTION> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MsgMove_2eproto__INCLUDED

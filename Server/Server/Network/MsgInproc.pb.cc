// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgInproc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MsgInproc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

void protobuf_ShutdownFile_MsgInproc_2eproto() {
  delete CMsgInproc::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_MsgInproc_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_MsgInproc_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  CMsgInproc::default_instance_ = new CMsgInproc();
  CMsgInproc::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MsgInproc_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_MsgInproc_2eproto_once_);
void protobuf_AddDesc_MsgInproc_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_MsgInproc_2eproto_once_,
                 &protobuf_AddDesc_MsgInproc_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MsgInproc_2eproto {
  StaticDescriptorInitializer_MsgInproc_2eproto() {
    protobuf_AddDesc_MsgInproc_2eproto();
  }
} static_descriptor_initializer_MsgInproc_2eproto_;
#endif
bool INPROC_ACTION_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 10000:
    case 10001:
    case 20000:
    case 20001:
    case 20002:
    case 30000:
    case 30001:
    case 30002:
    case 30003:
    case 30004:
    case 30005:
    case 40000:
    case 40001:
    case 40002:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int CMsgInproc::kNActionFieldNumber;
const int CMsgInproc::kIdRoleFieldNumber;
const int CMsgInproc::kU32DataFieldNumber;
const int CMsgInproc::kU64DataFieldNumber;
const int CMsgInproc::kFDataFieldNumber;
const int CMsgInproc::kStrDataFieldNumber;
#endif  // !_MSC_VER

CMsgInproc::CMsgInproc()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgInproc)
}

void CMsgInproc::InitAsDefaultInstance() {
}

CMsgInproc::CMsgInproc(const CMsgInproc& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgInproc)
}

void CMsgInproc::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  naction_ = 0;
  idrole_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgInproc::~CMsgInproc() {
  // @@protoc_insertion_point(destructor:CMsgInproc)
  SharedDtor();
}

void CMsgInproc::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void CMsgInproc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CMsgInproc& CMsgInproc::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_MsgInproc_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_MsgInproc_2eproto();
#endif
  return *default_instance_;
}

CMsgInproc* CMsgInproc::default_instance_ = NULL;

CMsgInproc* CMsgInproc::New(::google::protobuf::Arena* arena) const {
  CMsgInproc* n = new CMsgInproc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgInproc::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    naction_ = 0;
    idrole_ = GOOGLE_ULONGLONG(0);
  }
  u32data_.Clear();
  u64data_.Clear();
  fdata_.Clear();
  strdata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool CMsgInproc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:CMsgInproc)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .INPROC_ACTION nAction = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::INPROC_ACTION_IsValid(value)) {
            set_naction(static_cast< ::INPROC_ACTION >(value));
          } else {
            unknown_fields_stream.WriteVarint32(tag);
            unknown_fields_stream.WriteVarint32(value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_idRole;
        break;
      }

      // optional uint64 idRole = 2;
      case 2: {
        if (tag == 16) {
         parse_idRole:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &idrole_)));
          set_has_idrole();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_u32Data;
        break;
      }

      // repeated uint32 u32Data = 3;
      case 3: {
        if (tag == 24) {
         parse_u32Data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_u32data())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_u32data())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_u32Data;
        if (input->ExpectTag(32)) goto parse_u64Data;
        break;
      }

      // repeated uint64 u64Data = 4;
      case 4: {
        if (tag == 32) {
         parse_u64Data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 32, input, this->mutable_u64data())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_u64data())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_u64Data;
        if (input->ExpectTag(45)) goto parse_fData;
        break;
      }

      // repeated float fData = 5;
      case 5: {
        if (tag == 45) {
         parse_fData:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 45, input, this->mutable_fdata())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_fdata())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_fData;
        if (input->ExpectTag(50)) goto parse_strData;
        break;
      }

      // repeated string strData = 6;
      case 6: {
        if (tag == 50) {
         parse_strData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_strData;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgInproc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgInproc)
  return false;
#undef DO_
}

void CMsgInproc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgInproc)
  // required .INPROC_ACTION nAction = 1;
  if (has_naction()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->naction(), output);
  }

  // optional uint64 idRole = 2;
  if (has_idrole()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->idrole(), output);
  }

  // repeated uint32 u32Data = 3;
  for (int i = 0; i < this->u32data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->u32data(i), output);
  }

  // repeated uint64 u64Data = 4;
  for (int i = 0; i < this->u64data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      4, this->u64data(i), output);
  }

  // repeated float fData = 5;
  for (int i = 0; i < this->fdata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      5, this->fdata(i), output);
  }

  // repeated string strData = 6;
  for (int i = 0; i < this->strdata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->strdata(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:CMsgInproc)
}

int CMsgInproc::ByteSize() const {
  int total_size = 0;

  // required .INPROC_ACTION nAction = 1;
  if (has_naction()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->naction());
  }
  // optional uint64 idRole = 2;
  if (has_idrole()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->idrole());
  }

  // repeated uint32 u32Data = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->u32data_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->u32data(i));
    }
    total_size += 1 * this->u32data_size() + data_size;
  }

  // repeated uint64 u64Data = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->u64data_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->u64data(i));
    }
    total_size += 1 * this->u64data_size() + data_size;
  }

  // repeated float fData = 5;
  {
    int data_size = 0;
    data_size = 4 * this->fdata_size();
    total_size += 1 * this->fdata_size() + data_size;
  }

  // repeated string strData = 6;
  total_size += 1 * this->strdata_size();
  for (int i = 0; i < this->strdata_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strdata(i));
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgInproc::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMsgInproc*>(&from));
}

void CMsgInproc::MergeFrom(const CMsgInproc& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  u32data_.MergeFrom(from.u32data_);
  u64data_.MergeFrom(from.u64data_);
  fdata_.MergeFrom(from.fdata_);
  strdata_.MergeFrom(from.strdata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_naction()) {
      set_naction(from.naction());
    }
    if (from.has_idrole()) {
      set_idrole(from.idrole());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void CMsgInproc::CopyFrom(const CMsgInproc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgInproc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CMsgInproc::Swap(CMsgInproc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgInproc::InternalSwap(CMsgInproc* other) {
  std::swap(naction_, other->naction_);
  std::swap(idrole_, other->idrole_);
  u32data_.UnsafeArenaSwap(&other->u32data_);
  u64data_.UnsafeArenaSwap(&other->u64data_);
  fdata_.UnsafeArenaSwap(&other->fdata_);
  strdata_.UnsafeArenaSwap(&other->strdata_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.swap(other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CMsgInproc::GetTypeName() const {
  return "CMsgInproc";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgInproc

// required .INPROC_ACTION nAction = 1;
bool CMsgInproc::has_naction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgInproc::set_has_naction() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgInproc::clear_has_naction() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgInproc::clear_naction() {
  naction_ = 0;
  clear_has_naction();
}
 ::INPROC_ACTION CMsgInproc::naction() const {
  // @@protoc_insertion_point(field_get:CMsgInproc.nAction)
  return static_cast< ::INPROC_ACTION >(naction_);
}
 void CMsgInproc::set_naction(::INPROC_ACTION value) {
  assert(::INPROC_ACTION_IsValid(value));
  set_has_naction();
  naction_ = value;
  // @@protoc_insertion_point(field_set:CMsgInproc.nAction)
}

// optional uint64 idRole = 2;
bool CMsgInproc::has_idrole() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgInproc::set_has_idrole() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgInproc::clear_has_idrole() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgInproc::clear_idrole() {
  idrole_ = GOOGLE_ULONGLONG(0);
  clear_has_idrole();
}
 ::google::protobuf::uint64 CMsgInproc::idrole() const {
  // @@protoc_insertion_point(field_get:CMsgInproc.idRole)
  return idrole_;
}
 void CMsgInproc::set_idrole(::google::protobuf::uint64 value) {
  set_has_idrole();
  idrole_ = value;
  // @@protoc_insertion_point(field_set:CMsgInproc.idRole)
}

// repeated uint32 u32Data = 3;
int CMsgInproc::u32data_size() const {
  return u32data_.size();
}
void CMsgInproc::clear_u32data() {
  u32data_.Clear();
}
 ::google::protobuf::uint32 CMsgInproc::u32data(int index) const {
  // @@protoc_insertion_point(field_get:CMsgInproc.u32Data)
  return u32data_.Get(index);
}
 void CMsgInproc::set_u32data(int index, ::google::protobuf::uint32 value) {
  u32data_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgInproc.u32Data)
}
 void CMsgInproc::add_u32data(::google::protobuf::uint32 value) {
  u32data_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgInproc.u32Data)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgInproc::u32data() const {
  // @@protoc_insertion_point(field_list:CMsgInproc.u32Data)
  return u32data_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgInproc::mutable_u32data() {
  // @@protoc_insertion_point(field_mutable_list:CMsgInproc.u32Data)
  return &u32data_;
}

// repeated uint64 u64Data = 4;
int CMsgInproc::u64data_size() const {
  return u64data_.size();
}
void CMsgInproc::clear_u64data() {
  u64data_.Clear();
}
 ::google::protobuf::uint64 CMsgInproc::u64data(int index) const {
  // @@protoc_insertion_point(field_get:CMsgInproc.u64Data)
  return u64data_.Get(index);
}
 void CMsgInproc::set_u64data(int index, ::google::protobuf::uint64 value) {
  u64data_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgInproc.u64Data)
}
 void CMsgInproc::add_u64data(::google::protobuf::uint64 value) {
  u64data_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgInproc.u64Data)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgInproc::u64data() const {
  // @@protoc_insertion_point(field_list:CMsgInproc.u64Data)
  return u64data_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgInproc::mutable_u64data() {
  // @@protoc_insertion_point(field_mutable_list:CMsgInproc.u64Data)
  return &u64data_;
}

// repeated float fData = 5;
int CMsgInproc::fdata_size() const {
  return fdata_.size();
}
void CMsgInproc::clear_fdata() {
  fdata_.Clear();
}
 float CMsgInproc::fdata(int index) const {
  // @@protoc_insertion_point(field_get:CMsgInproc.fData)
  return fdata_.Get(index);
}
 void CMsgInproc::set_fdata(int index, float value) {
  fdata_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgInproc.fData)
}
 void CMsgInproc::add_fdata(float value) {
  fdata_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgInproc.fData)
}
 const ::google::protobuf::RepeatedField< float >&
CMsgInproc::fdata() const {
  // @@protoc_insertion_point(field_list:CMsgInproc.fData)
  return fdata_;
}
 ::google::protobuf::RepeatedField< float >*
CMsgInproc::mutable_fdata() {
  // @@protoc_insertion_point(field_mutable_list:CMsgInproc.fData)
  return &fdata_;
}

// repeated string strData = 6;
int CMsgInproc::strdata_size() const {
  return strdata_.size();
}
void CMsgInproc::clear_strdata() {
  strdata_.Clear();
}
 const ::std::string& CMsgInproc::strdata(int index) const {
  // @@protoc_insertion_point(field_get:CMsgInproc.strData)
  return strdata_.Get(index);
}
 ::std::string* CMsgInproc::mutable_strdata(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgInproc.strData)
  return strdata_.Mutable(index);
}
 void CMsgInproc::set_strdata(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CMsgInproc.strData)
  strdata_.Mutable(index)->assign(value);
}
 void CMsgInproc::set_strdata(int index, const char* value) {
  strdata_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgInproc.strData)
}
 void CMsgInproc::set_strdata(int index, const char* value, size_t size) {
  strdata_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgInproc.strData)
}
 ::std::string* CMsgInproc::add_strdata() {
  return strdata_.Add();
}
 void CMsgInproc::add_strdata(const ::std::string& value) {
  strdata_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgInproc.strData)
}
 void CMsgInproc::add_strdata(const char* value) {
  strdata_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgInproc.strData)
}
 void CMsgInproc::add_strdata(const char* value, size_t size) {
  strdata_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgInproc.strData)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgInproc::strdata() const {
  // @@protoc_insertion_point(field_list:CMsgInproc.strData)
  return strdata_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgInproc::mutable_strdata() {
  // @@protoc_insertion_point(field_mutable_list:CMsgInproc.strData)
  return &strdata_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

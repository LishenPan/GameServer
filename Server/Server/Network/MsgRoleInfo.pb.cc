// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgRoleInfo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MsgRoleInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

void protobuf_ShutdownFile_MsgRoleInfo_2eproto() {
  delete CMsgRoleInfo::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_MsgRoleInfo_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_MsgRoleInfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  CMsgRoleInfo::default_instance_ = new CMsgRoleInfo();
  CMsgRoleInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MsgRoleInfo_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_MsgRoleInfo_2eproto_once_);
void protobuf_AddDesc_MsgRoleInfo_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_MsgRoleInfo_2eproto_once_,
                 &protobuf_AddDesc_MsgRoleInfo_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MsgRoleInfo_2eproto {
  StaticDescriptorInitializer_MsgRoleInfo_2eproto() {
    protobuf_AddDesc_MsgRoleInfo_2eproto();
  }
} static_descriptor_initializer_MsgRoleInfo_2eproto_;
#endif
bool MSG_ROLE_INFO_ACTION_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int CMsgRoleInfo::kNActionFieldNumber;
const int CMsgRoleInfo::kIdRoleFieldNumber;
const int CMsgRoleInfo::kNTypeFieldNumber;
const int CMsgRoleInfo::kStrNameFieldNumber;
const int CMsgRoleInfo::kIdRoleTypeFieldNumber;
const int CMsgRoleInfo::kNLevelFieldNumber;
const int CMsgRoleInfo::kNExpFieldNumber;
const int CMsgRoleInfo::kFPosXFieldNumber;
const int CMsgRoleInfo::kFPosYFieldNumber;
const int CMsgRoleInfo::kFPosZFieldNumber;
const int CMsgRoleInfo::kNLifeFieldNumber;
const int CMsgRoleInfo::kNMaxLifeFieldNumber;
const int CMsgRoleInfo::kNManaFieldNumber;
const int CMsgRoleInfo::kNMaxManaFieldNumber;
const int CMsgRoleInfo::kIdSceneFieldNumber;
#endif  // !_MSC_VER

CMsgRoleInfo::CMsgRoleInfo()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgRoleInfo)
}

void CMsgRoleInfo::InitAsDefaultInstance() {
}

CMsgRoleInfo::CMsgRoleInfo(const CMsgRoleInfo& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgRoleInfo)
}

void CMsgRoleInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  naction_ = 0;
  idrole_ = GOOGLE_ULONGLONG(0);
  ntype_ = 0u;
  strname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idroletype_ = 0u;
  nlevel_ = 0;
  nexp_ = GOOGLE_LONGLONG(0);
  fpos_x_ = 0;
  fpos_y_ = 0;
  fpos_z_ = 0;
  nlife_ = 0;
  nmaxlife_ = 0;
  nmana_ = 0;
  nmaxmana_ = 0;
  idscene_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgRoleInfo::~CMsgRoleInfo() {
  // @@protoc_insertion_point(destructor:CMsgRoleInfo)
  SharedDtor();
}

void CMsgRoleInfo::SharedDtor() {
  strname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void CMsgRoleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CMsgRoleInfo& CMsgRoleInfo::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_MsgRoleInfo_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_MsgRoleInfo_2eproto();
#endif
  return *default_instance_;
}

CMsgRoleInfo* CMsgRoleInfo::default_instance_ = NULL;

CMsgRoleInfo* CMsgRoleInfo::New(::google::protobuf::Arena* arena) const {
  CMsgRoleInfo* n = new CMsgRoleInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgRoleInfo::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMsgRoleInfo*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(idrole_, ntype_);
    ZR_(idroletype_, fpos_x_);
    if (has_strname()) {
      strname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 32512u) {
    ZR_(fpos_y_, idscene_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool CMsgRoleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:CMsgRoleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 nAction = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &naction_)));
          set_has_naction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_idRole;
        break;
      }

      // required uint64 idRole = 2;
      case 2: {
        if (tag == 16) {
         parse_idRole:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &idrole_)));
          set_has_idrole();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_nType;
        break;
      }

      // required uint32 nType = 3;
      case 3: {
        if (tag == 24) {
         parse_nType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ntype_)));
          set_has_ntype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_strName;
        break;
      }

      // optional string strName = 4;
      case 4: {
        if (tag == 34) {
         parse_strName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strname()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_idRoleType;
        break;
      }

      // optional uint32 idRoleType = 5;
      case 5: {
        if (tag == 40) {
         parse_idRoleType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idroletype_)));
          set_has_idroletype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_nLevel;
        break;
      }

      // optional int32 nLevel = 6;
      case 6: {
        if (tag == 48) {
         parse_nLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nlevel_)));
          set_has_nlevel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_nExp;
        break;
      }

      // optional int64 nExp = 7;
      case 7: {
        if (tag == 56) {
         parse_nExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nexp_)));
          set_has_nexp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_fPos_x;
        break;
      }

      // optional float fPos_x = 8;
      case 8: {
        if (tag == 69) {
         parse_fPos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fpos_x_)));
          set_has_fpos_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_fPos_y;
        break;
      }

      // optional float fPos_y = 9;
      case 9: {
        if (tag == 77) {
         parse_fPos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fpos_y_)));
          set_has_fpos_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(85)) goto parse_fPos_z;
        break;
      }

      // optional float fPos_z = 10;
      case 10: {
        if (tag == 85) {
         parse_fPos_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fpos_z_)));
          set_has_fpos_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_nLife;
        break;
      }

      // optional int32 nLife = 11;
      case 11: {
        if (tag == 88) {
         parse_nLife:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nlife_)));
          set_has_nlife();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_nMaxLife;
        break;
      }

      // optional int32 nMaxLife = 12;
      case 12: {
        if (tag == 96) {
         parse_nMaxLife:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nmaxlife_)));
          set_has_nmaxlife();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_nMana;
        break;
      }

      // optional int32 nMana = 13;
      case 13: {
        if (tag == 104) {
         parse_nMana:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nmana_)));
          set_has_nmana();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_nMaxMana;
        break;
      }

      // optional int32 nMaxMana = 14;
      case 14: {
        if (tag == 112) {
         parse_nMaxMana:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nmaxmana_)));
          set_has_nmaxmana();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8008)) goto parse_idScene;
        break;
      }

      // optional uint32 idScene = 1001;
      case 1001: {
        if (tag == 8008) {
         parse_idScene:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idscene_)));
          set_has_idscene();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgRoleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgRoleInfo)
  return false;
#undef DO_
}

void CMsgRoleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgRoleInfo)
  // required int32 nAction = 1;
  if (has_naction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->naction(), output);
  }

  // required uint64 idRole = 2;
  if (has_idrole()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->idrole(), output);
  }

  // required uint32 nType = 3;
  if (has_ntype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ntype(), output);
  }

  // optional string strName = 4;
  if (has_strname()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strname(), output);
  }

  // optional uint32 idRoleType = 5;
  if (has_idroletype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->idroletype(), output);
  }

  // optional int32 nLevel = 6;
  if (has_nlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->nlevel(), output);
  }

  // optional int64 nExp = 7;
  if (has_nexp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->nexp(), output);
  }

  // optional float fPos_x = 8;
  if (has_fpos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->fpos_x(), output);
  }

  // optional float fPos_y = 9;
  if (has_fpos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->fpos_y(), output);
  }

  // optional float fPos_z = 10;
  if (has_fpos_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->fpos_z(), output);
  }

  // optional int32 nLife = 11;
  if (has_nlife()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->nlife(), output);
  }

  // optional int32 nMaxLife = 12;
  if (has_nmaxlife()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->nmaxlife(), output);
  }

  // optional int32 nMana = 13;
  if (has_nmana()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->nmana(), output);
  }

  // optional int32 nMaxMana = 14;
  if (has_nmaxmana()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->nmaxmana(), output);
  }

  // optional uint32 idScene = 1001;
  if (has_idscene()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1001, this->idscene(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:CMsgRoleInfo)
}

int CMsgRoleInfo::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_naction()) {
    // required int32 nAction = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->naction());
  }

  if (has_idrole()) {
    // required uint64 idRole = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->idrole());
  }

  if (has_ntype()) {
    // required uint32 nType = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ntype());
  }

  return total_size;
}
int CMsgRoleInfo::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 nAction = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->naction());

    // required uint64 idRole = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->idrole());

    // required uint32 nType = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ntype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[3 / 32] & 248u) {
    // optional string strName = 4;
    if (has_strname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strname());
    }

    // optional uint32 idRoleType = 5;
    if (has_idroletype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->idroletype());
    }

    // optional int32 nLevel = 6;
    if (has_nlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nlevel());
    }

    // optional int64 nExp = 7;
    if (has_nexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->nexp());
    }

    // optional float fPos_x = 8;
    if (has_fpos_x()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & 32512u) {
    // optional float fPos_y = 9;
    if (has_fpos_y()) {
      total_size += 1 + 4;
    }

    // optional float fPos_z = 10;
    if (has_fpos_z()) {
      total_size += 1 + 4;
    }

    // optional int32 nLife = 11;
    if (has_nlife()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nlife());
    }

    // optional int32 nMaxLife = 12;
    if (has_nmaxlife()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nmaxlife());
    }

    // optional int32 nMana = 13;
    if (has_nmana()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nmana());
    }

    // optional int32 nMaxMana = 14;
    if (has_nmaxmana()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nmaxmana());
    }

    // optional uint32 idScene = 1001;
    if (has_idscene()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->idscene());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRoleInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CMsgRoleInfo*>(&from));
}

void CMsgRoleInfo::MergeFrom(const CMsgRoleInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_naction()) {
      set_naction(from.naction());
    }
    if (from.has_idrole()) {
      set_idrole(from.idrole());
    }
    if (from.has_ntype()) {
      set_ntype(from.ntype());
    }
    if (from.has_strname()) {
      set_has_strname();
      strname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strname_);
    }
    if (from.has_idroletype()) {
      set_idroletype(from.idroletype());
    }
    if (from.has_nlevel()) {
      set_nlevel(from.nlevel());
    }
    if (from.has_nexp()) {
      set_nexp(from.nexp());
    }
    if (from.has_fpos_x()) {
      set_fpos_x(from.fpos_x());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_fpos_y()) {
      set_fpos_y(from.fpos_y());
    }
    if (from.has_fpos_z()) {
      set_fpos_z(from.fpos_z());
    }
    if (from.has_nlife()) {
      set_nlife(from.nlife());
    }
    if (from.has_nmaxlife()) {
      set_nmaxlife(from.nmaxlife());
    }
    if (from.has_nmana()) {
      set_nmana(from.nmana());
    }
    if (from.has_nmaxmana()) {
      set_nmaxmana(from.nmaxmana());
    }
    if (from.has_idscene()) {
      set_idscene(from.idscene());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void CMsgRoleInfo::CopyFrom(const CMsgRoleInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRoleInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void CMsgRoleInfo::Swap(CMsgRoleInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRoleInfo::InternalSwap(CMsgRoleInfo* other) {
  std::swap(naction_, other->naction_);
  std::swap(idrole_, other->idrole_);
  std::swap(ntype_, other->ntype_);
  strname_.Swap(&other->strname_);
  std::swap(idroletype_, other->idroletype_);
  std::swap(nlevel_, other->nlevel_);
  std::swap(nexp_, other->nexp_);
  std::swap(fpos_x_, other->fpos_x_);
  std::swap(fpos_y_, other->fpos_y_);
  std::swap(fpos_z_, other->fpos_z_);
  std::swap(nlife_, other->nlife_);
  std::swap(nmaxlife_, other->nmaxlife_);
  std::swap(nmana_, other->nmana_);
  std::swap(nmaxmana_, other->nmaxmana_);
  std::swap(idscene_, other->idscene_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.swap(other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CMsgRoleInfo::GetTypeName() const {
  return "CMsgRoleInfo";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgRoleInfo

// required int32 nAction = 1;
bool CMsgRoleInfo::has_naction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgRoleInfo::set_has_naction() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgRoleInfo::clear_has_naction() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgRoleInfo::clear_naction() {
  naction_ = 0;
  clear_has_naction();
}
 ::google::protobuf::int32 CMsgRoleInfo::naction() const {
  // @@protoc_insertion_point(field_get:CMsgRoleInfo.nAction)
  return naction_;
}
 void CMsgRoleInfo::set_naction(::google::protobuf::int32 value) {
  set_has_naction();
  naction_ = value;
  // @@protoc_insertion_point(field_set:CMsgRoleInfo.nAction)
}

// required uint64 idRole = 2;
bool CMsgRoleInfo::has_idrole() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgRoleInfo::set_has_idrole() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgRoleInfo::clear_has_idrole() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgRoleInfo::clear_idrole() {
  idrole_ = GOOGLE_ULONGLONG(0);
  clear_has_idrole();
}
 ::google::protobuf::uint64 CMsgRoleInfo::idrole() const {
  // @@protoc_insertion_point(field_get:CMsgRoleInfo.idRole)
  return idrole_;
}
 void CMsgRoleInfo::set_idrole(::google::protobuf::uint64 value) {
  set_has_idrole();
  idrole_ = value;
  // @@protoc_insertion_point(field_set:CMsgRoleInfo.idRole)
}

// required uint32 nType = 3;
bool CMsgRoleInfo::has_ntype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgRoleInfo::set_has_ntype() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgRoleInfo::clear_has_ntype() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgRoleInfo::clear_ntype() {
  ntype_ = 0u;
  clear_has_ntype();
}
 ::google::protobuf::uint32 CMsgRoleInfo::ntype() const {
  // @@protoc_insertion_point(field_get:CMsgRoleInfo.nType)
  return ntype_;
}
 void CMsgRoleInfo::set_ntype(::google::protobuf::uint32 value) {
  set_has_ntype();
  ntype_ = value;
  // @@protoc_insertion_point(field_set:CMsgRoleInfo.nType)
}

// optional string strName = 4;
bool CMsgRoleInfo::has_strname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgRoleInfo::set_has_strname() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgRoleInfo::clear_has_strname() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgRoleInfo::clear_strname() {
  strname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_strname();
}
 const ::std::string& CMsgRoleInfo::strname() const {
  // @@protoc_insertion_point(field_get:CMsgRoleInfo.strName)
  return strname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgRoleInfo::set_strname(const ::std::string& value) {
  set_has_strname();
  strname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgRoleInfo.strName)
}
 void CMsgRoleInfo::set_strname(const char* value) {
  set_has_strname();
  strname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgRoleInfo.strName)
}
 void CMsgRoleInfo::set_strname(const char* value, size_t size) {
  set_has_strname();
  strname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgRoleInfo.strName)
}
 ::std::string* CMsgRoleInfo::mutable_strname() {
  set_has_strname();
  // @@protoc_insertion_point(field_mutable:CMsgRoleInfo.strName)
  return strname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMsgRoleInfo::release_strname() {
  clear_has_strname();
  return strname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMsgRoleInfo::set_allocated_strname(::std::string* strname) {
  if (strname != NULL) {
    set_has_strname();
  } else {
    clear_has_strname();
  }
  strname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strname);
  // @@protoc_insertion_point(field_set_allocated:CMsgRoleInfo.strName)
}

// optional uint32 idRoleType = 5;
bool CMsgRoleInfo::has_idroletype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgRoleInfo::set_has_idroletype() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgRoleInfo::clear_has_idroletype() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgRoleInfo::clear_idroletype() {
  idroletype_ = 0u;
  clear_has_idroletype();
}
 ::google::protobuf::uint32 CMsgRoleInfo::idroletype() const {
  // @@protoc_insertion_point(field_get:CMsgRoleInfo.idRoleType)
  return idroletype_;
}
 void CMsgRoleInfo::set_idroletype(::google::protobuf::uint32 value) {
  set_has_idroletype();
  idroletype_ = value;
  // @@protoc_insertion_point(field_set:CMsgRoleInfo.idRoleType)
}

// optional int32 nLevel = 6;
bool CMsgRoleInfo::has_nlevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgRoleInfo::set_has_nlevel() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgRoleInfo::clear_has_nlevel() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgRoleInfo::clear_nlevel() {
  nlevel_ = 0;
  clear_has_nlevel();
}
 ::google::protobuf::int32 CMsgRoleInfo::nlevel() const {
  // @@protoc_insertion_point(field_get:CMsgRoleInfo.nLevel)
  return nlevel_;
}
 void CMsgRoleInfo::set_nlevel(::google::protobuf::int32 value) {
  set_has_nlevel();
  nlevel_ = value;
  // @@protoc_insertion_point(field_set:CMsgRoleInfo.nLevel)
}

// optional int64 nExp = 7;
bool CMsgRoleInfo::has_nexp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgRoleInfo::set_has_nexp() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgRoleInfo::clear_has_nexp() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgRoleInfo::clear_nexp() {
  nexp_ = GOOGLE_LONGLONG(0);
  clear_has_nexp();
}
 ::google::protobuf::int64 CMsgRoleInfo::nexp() const {
  // @@protoc_insertion_point(field_get:CMsgRoleInfo.nExp)
  return nexp_;
}
 void CMsgRoleInfo::set_nexp(::google::protobuf::int64 value) {
  set_has_nexp();
  nexp_ = value;
  // @@protoc_insertion_point(field_set:CMsgRoleInfo.nExp)
}

// optional float fPos_x = 8;
bool CMsgRoleInfo::has_fpos_x() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgRoleInfo::set_has_fpos_x() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgRoleInfo::clear_has_fpos_x() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgRoleInfo::clear_fpos_x() {
  fpos_x_ = 0;
  clear_has_fpos_x();
}
 float CMsgRoleInfo::fpos_x() const {
  // @@protoc_insertion_point(field_get:CMsgRoleInfo.fPos_x)
  return fpos_x_;
}
 void CMsgRoleInfo::set_fpos_x(float value) {
  set_has_fpos_x();
  fpos_x_ = value;
  // @@protoc_insertion_point(field_set:CMsgRoleInfo.fPos_x)
}

// optional float fPos_y = 9;
bool CMsgRoleInfo::has_fpos_y() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CMsgRoleInfo::set_has_fpos_y() {
  _has_bits_[0] |= 0x00000100u;
}
void CMsgRoleInfo::clear_has_fpos_y() {
  _has_bits_[0] &= ~0x00000100u;
}
void CMsgRoleInfo::clear_fpos_y() {
  fpos_y_ = 0;
  clear_has_fpos_y();
}
 float CMsgRoleInfo::fpos_y() const {
  // @@protoc_insertion_point(field_get:CMsgRoleInfo.fPos_y)
  return fpos_y_;
}
 void CMsgRoleInfo::set_fpos_y(float value) {
  set_has_fpos_y();
  fpos_y_ = value;
  // @@protoc_insertion_point(field_set:CMsgRoleInfo.fPos_y)
}

// optional float fPos_z = 10;
bool CMsgRoleInfo::has_fpos_z() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CMsgRoleInfo::set_has_fpos_z() {
  _has_bits_[0] |= 0x00000200u;
}
void CMsgRoleInfo::clear_has_fpos_z() {
  _has_bits_[0] &= ~0x00000200u;
}
void CMsgRoleInfo::clear_fpos_z() {
  fpos_z_ = 0;
  clear_has_fpos_z();
}
 float CMsgRoleInfo::fpos_z() const {
  // @@protoc_insertion_point(field_get:CMsgRoleInfo.fPos_z)
  return fpos_z_;
}
 void CMsgRoleInfo::set_fpos_z(float value) {
  set_has_fpos_z();
  fpos_z_ = value;
  // @@protoc_insertion_point(field_set:CMsgRoleInfo.fPos_z)
}

// optional int32 nLife = 11;
bool CMsgRoleInfo::has_nlife() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void CMsgRoleInfo::set_has_nlife() {
  _has_bits_[0] |= 0x00000400u;
}
void CMsgRoleInfo::clear_has_nlife() {
  _has_bits_[0] &= ~0x00000400u;
}
void CMsgRoleInfo::clear_nlife() {
  nlife_ = 0;
  clear_has_nlife();
}
 ::google::protobuf::int32 CMsgRoleInfo::nlife() const {
  // @@protoc_insertion_point(field_get:CMsgRoleInfo.nLife)
  return nlife_;
}
 void CMsgRoleInfo::set_nlife(::google::protobuf::int32 value) {
  set_has_nlife();
  nlife_ = value;
  // @@protoc_insertion_point(field_set:CMsgRoleInfo.nLife)
}

// optional int32 nMaxLife = 12;
bool CMsgRoleInfo::has_nmaxlife() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void CMsgRoleInfo::set_has_nmaxlife() {
  _has_bits_[0] |= 0x00000800u;
}
void CMsgRoleInfo::clear_has_nmaxlife() {
  _has_bits_[0] &= ~0x00000800u;
}
void CMsgRoleInfo::clear_nmaxlife() {
  nmaxlife_ = 0;
  clear_has_nmaxlife();
}
 ::google::protobuf::int32 CMsgRoleInfo::nmaxlife() const {
  // @@protoc_insertion_point(field_get:CMsgRoleInfo.nMaxLife)
  return nmaxlife_;
}
 void CMsgRoleInfo::set_nmaxlife(::google::protobuf::int32 value) {
  set_has_nmaxlife();
  nmaxlife_ = value;
  // @@protoc_insertion_point(field_set:CMsgRoleInfo.nMaxLife)
}

// optional int32 nMana = 13;
bool CMsgRoleInfo::has_nmana() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void CMsgRoleInfo::set_has_nmana() {
  _has_bits_[0] |= 0x00001000u;
}
void CMsgRoleInfo::clear_has_nmana() {
  _has_bits_[0] &= ~0x00001000u;
}
void CMsgRoleInfo::clear_nmana() {
  nmana_ = 0;
  clear_has_nmana();
}
 ::google::protobuf::int32 CMsgRoleInfo::nmana() const {
  // @@protoc_insertion_point(field_get:CMsgRoleInfo.nMana)
  return nmana_;
}
 void CMsgRoleInfo::set_nmana(::google::protobuf::int32 value) {
  set_has_nmana();
  nmana_ = value;
  // @@protoc_insertion_point(field_set:CMsgRoleInfo.nMana)
}

// optional int32 nMaxMana = 14;
bool CMsgRoleInfo::has_nmaxmana() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void CMsgRoleInfo::set_has_nmaxmana() {
  _has_bits_[0] |= 0x00002000u;
}
void CMsgRoleInfo::clear_has_nmaxmana() {
  _has_bits_[0] &= ~0x00002000u;
}
void CMsgRoleInfo::clear_nmaxmana() {
  nmaxmana_ = 0;
  clear_has_nmaxmana();
}
 ::google::protobuf::int32 CMsgRoleInfo::nmaxmana() const {
  // @@protoc_insertion_point(field_get:CMsgRoleInfo.nMaxMana)
  return nmaxmana_;
}
 void CMsgRoleInfo::set_nmaxmana(::google::protobuf::int32 value) {
  set_has_nmaxmana();
  nmaxmana_ = value;
  // @@protoc_insertion_point(field_set:CMsgRoleInfo.nMaxMana)
}

// optional uint32 idScene = 1001;
bool CMsgRoleInfo::has_idscene() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void CMsgRoleInfo::set_has_idscene() {
  _has_bits_[0] |= 0x00004000u;
}
void CMsgRoleInfo::clear_has_idscene() {
  _has_bits_[0] &= ~0x00004000u;
}
void CMsgRoleInfo::clear_idscene() {
  idscene_ = 0u;
  clear_has_idscene();
}
 ::google::protobuf::uint32 CMsgRoleInfo::idscene() const {
  // @@protoc_insertion_point(field_get:CMsgRoleInfo.idScene)
  return idscene_;
}
 void CMsgRoleInfo::set_idscene(::google::protobuf::uint32 value) {
  set_has_idscene();
  idscene_ = value;
  // @@protoc_insertion_point(field_set:CMsgRoleInfo.idScene)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
